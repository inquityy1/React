{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programiranje\\\\1 React-playground\\\\1. understanding\\\\react-complete-guide\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport UserInput from \"./UserInput/UserInput\";\nimport UserOutput from \"./UserOutput/UserOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"supermax\"\n    };\n\n    this.usernameChangedHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create TWO new components: UserInput and UserOutput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"UserInput should hold an input element, UserOutput two paragraphs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Pass a username (of your choice) to UserOutput via props and display it there\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add a method to manipulate the state (=> an event-handler method)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add two-way-binding to your input (in UserInput) to also display the starting username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n        changed: this.usernameChangedHandler,\n        currentName: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        userName: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        userName: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        userName: \"Max\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Programiranje/1 React-playground/1. understanding/react-complete-guide/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","state","username","usernameChangedHandler","event","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;;AAAA,SAK1BC,sBAL0B,GAKAC,KAAD,IAAW;AAClC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KAPyB;AAAA;;AAS1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsCE,QAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKL,sBADhB;AAEE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC;AAF1B;AAAA;AAAA;AAAA;AAAA,cAtCF,eA0CE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cA1CF,eA2CE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cA3CF,eA4CE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AA1DyB;;AA6D5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport UserInput from \"./UserInput/UserInput\";\nimport UserOutput from \"./UserOutput/UserOutput\";\n\nclass App extends Component {\n  state = {\n    username: \"supermax\",\n  };\n\n  usernameChangedHandler = (event) => {\n    this.setState({ username: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>\n            UserInput should hold an input element, UserOutput two paragraphs\n          </li>\n          <li>\n            Output multiple UserOutput components in the App component (any\n            paragraph texts of your choice)\n          </li>\n          <li>\n            Pass a username (of your choice) to UserOutput via props and display\n            it there\n          </li>\n          <li>\n            Add state to the App component (=> the username) and pass the\n            username to the UserOutput component\n          </li>\n          <li>\n            Add a method to manipulate the state (=> an event-handler method)\n          </li>\n          <li>\n            Pass the event-handler method reference to the UserInput component\n            and bind it to the input-change event\n          </li>\n          <li>\n            Ensure that the new input entered by the user overwrites the old\n            username passed to UserOutput\n          </li>\n          <li>\n            Add two-way-binding to your input (in UserInput) to also display the\n            starting username\n          </li>\n          <li>\n            Add styling of your choice to your components/ elements in the\n            components - both with inline styles and stylesheets\n          </li>\n        </ol>\n        <UserInput\n          changed={this.usernameChangedHandler}\n          currentName={this.state.username}\n        />\n        <UserOutput userName={this.state.username} />\n        <UserOutput userName={this.state.username} />\n        <UserOutput userName=\"Max\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}